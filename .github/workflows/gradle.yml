name: CI / CD using github actions & docker

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # JDK setting
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle=${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test

      # docker build & push to production
      - name: Docker build & push to prod
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/flowerlab .
          docker push ${{ secrets.DOCKER_USERNAME }}/flowerlab

      # deploy to production
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            if [ $(sudo docker ps -q -f name=flowerlab_container) ]; then
              sudo docker stop flowerlab_container
              sudo docker rm flowerlab_container
            fi
            
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/flowerlab:latest
            sudo docker run -d -p 8080:8080 --name flowerlab_container ${{ secrets.DOCKER_USERNAME }}/flowerlab:latest
            
            sudo docker exec flowerlab_container mkdir -p /app
            sudo docker cp /home/ec2-user/app/flowerlab/flowerlab-model flowerlab_container:/app/flowerlab-model
            
            sudo docker image prune -f